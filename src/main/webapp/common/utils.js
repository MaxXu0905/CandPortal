var Utils = {	merge : function(obj, properties, force) {		var isForce = force || false;		for ( var property in properties) {			if (!obj.hasOwnProperty(property) || isForce) {				obj[property] = properties[property];			}		}		return obj;	},	printObj : function(obj) {		var info = '';		for ( var i in obj) {			info += i + ':' + obj[i] + '\n';		}		alert(info);	},	formatTime : function(timeStamp) {		if (!isNaN(timeStamp * 1) && timeStamp * 1 > 0) {			timeStamp = this.appendZero(timeStamp, 13) * 1;			var currT = new Date();			currT.setTime(timeStamp);			return currT.getFullYear()					+ '-'					+ ((currT.getMonth() + 1 + '').length == 2 ? (currT.getMonth() + 1)							: ('0' + (currT.getMonth() + 1))) + '-'					+ ((currT.getDate() + '').length == 2 ? currT.getDate() : ('0' + currT.getDate())) + ' '					+ ((currT.getHours() + '').length == 2 ? currT.getHours() : ('0' + currT.getHours())) + ':'					+ ((currT.getMinutes() + '').length == 2 ? currT.getMinutes() : ('0' + currT.getMinutes())) + ':'					+ ((currT.getSeconds() + '').length == 2 ? currT.getSeconds() : ('0' + currT.getSeconds()));		} else {			return '----------------------------';		}	},	appendZero : function(n, pos) {		n = '' + n;		if (n.length < pos) {			n = n + '0'.repeat(pos - n.length);		}		return n;	},	getProjectName : function() {		if (this.hasProName) {			var pathName = window.location.pathname;			return pathName.substring(0, pathName.substr(1).indexOf('/') + 1);		}		return '';	},	getParameter : function(url, name) {		var params = url.substring(url.indexOf('?') + 1);		params = params.split('&');		if (params && name) {			for ( var i = 0; i < params.length; i++) {				if (params[i].split('=')[0] == name) {					return params[i].split('=')[1];				}			}		}		return '';	},	getQueryString : function(name, urlStr) {		var url = urlStr == null ? window.location.search : url;		if (url.indexOf('?') != -1) {			var str = url.substr(1);			strs = str.split("&");			for ( var i = 0; i < strs.length; i++) {				if (strs[i].split('=')[0] == name) {					return decodeURI(strs[i].split('=')[1]);				}			}		}	}};